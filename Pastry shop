package EXAMS;

import java.util.*;
import java.util.stream.Collectors;

public class P01Pastryshop {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        List<Integer> liquidsList = Arrays.stream(scanner.nextLine().split(" "))
                .map(Integer::parseInt).collect(Collectors.toList());

        List<Integer> ingredientsList = Arrays.stream(scanner.nextLine().split(" "))
                .map(Integer::parseInt).collect(Collectors.toList());

        ArrayDeque<Integer> queueLiquids = new ArrayDeque<>();

        for (Integer integer : liquidsList) {
            queueLiquids.offer(integer);
        }

        ArrayDeque<Integer> stackIngredients = new ArrayDeque<>();

        for (Integer integer : ingredientsList) {
            stackIngredients.push(integer);
        }


        int biscuit = 25;
        int cake = 50;
        int pastry = 75;
        int pie = 100;

        int countBiscuit = 0;
        int countCake = 0;
        int countPastry = 0;
        int countPie = 0;


        while (queueLiquids.size() > 0 && stackIngredients.size() > 0) {
            int currentLiquid = queueLiquids.poll();
            int currentIngrediant = stackIngredients.pop();

            int sum = currentLiquid + currentIngrediant;

            if (sum == biscuit) {
                countBiscuit++;

            } else if (sum == cake) {
                countCake++;

            } else if (sum == pastry) {
                countPastry++;

            } else if (sum == pie) {
                countPie++;

            } else {
                int increaseIngrediant = currentIngrediant + 3;
                stackIngredients.push(increaseIngrediant);
            }
        }
        if (countBiscuit > 0 && countCake > 0 && countPastry > 0 && countPie > 0) {
            System.out.println("Great! You succeeded in cooking all the food!");
        } else {
            System.out.println("What a pity! You didn't have enough materials to cook everything.");
        }

        if (queueLiquids.size() == 0) {
            System.out.println("Liquids left: none");
        } else {
            System.out.println("Liquids left: " + queueLiquids.stream().map(String::valueOf).collect(Collectors.joining(", ")));
        }
        if (stackIngredients.size() == 0) {
            System.out.println("Ingredients left: none");
        } else {
            System.out.println("Ingredients left: " + stackIngredients.stream().map(String::valueOf).collect(Collectors.joining(", ")));
        }

        System.out.println("Biscuit: " + countBiscuit);
        System.out.println("Cake: " + countCake);
        System.out.println("Pie: " + countPie);
        System.out.println("Pastry: " + countPastry);
    }
}
